# replace .war with .jar or .ear if needed
name: Whitesource Prioritize Java with Maven

on:
  push:
    branches: [ release* ]
  pull_request:
    branches: [ release* ]
env:
  WS_URL: https://saas.whitesourcesoftware.com

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install -DskipTests=true
      - name: WhiteSource Unified Agent Scan
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          WS_APIKEY: ${{secrets.APIKEY}}
          WS_USERKEY: ${{secrets.USERKEY}}
          WS_WSS_URL: ${{env.WS_URL}}/agent
          WS_PRODUCTNAME: GH_${{github.event.repository.name}}
          WS_PROJECTNAME: ${{github.ref}}
          WS_MAVEN_RUNPRESTEP: true
          WS_GENERATEPROJECTDETAILSJSON: true
        run: |
          curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
          echo Unified Agent downloaded successfully
          java -jar wss-unified-agent.jar
          WS_PROJECTTOKEN=$(jq -r '.projects | .[] | .projectToken' ./whitesource/scanProjectDetails.json)
          echo "project token" $WS_PROJECTTOKEN
          curl -LJO https://raw.githubusercontent.com/whitesource-ps/ws-sbom-generator/master/spdx_tools-0.7.0a3_ws-py3-none-any.whl
          pip install spdx_tools-0.7.0a3_ws-py3-none-any.whl
          pip install ws_sbom_generator
          echo "WS_URL is" $WS_URL
          sbom_generator -u $WS_USERKEY -k $WS_APIKEY -s $WS_PROJECTTOKEN -a $WS_URL -t tv -o ./whitesource
      - name: 'Upload WhiteSource folder'
        uses: actions/upload-artifact@v2
        with:
          name: WhiteSource
          path: whitesource
          retention-days: 1
